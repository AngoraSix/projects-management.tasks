# https://docs.spring.io/spring-cloud-stream/reference/rabbit/rabbit_overview/putting-it-all-together.html#page-title
configs:
  amqp:
    bindings:
      mgmtTasksSyncing: ${A6_PROJECTS_MGMT_TASKS_RABBITMQ_BINDINGS_MGMTTASKSSYNCING:mgmtTasksSyncing}
      tasksClosed: ${A6_PROJECTS_MGMT_TASKS_RABBITMQ_BINDINGS_TASKSCLOSED:tasksClosed}

spring:
  cloud:
    stream:
      output-bindings: # we need explicit bindings bc we use StreamBridge
        - ${configs.amqp.bindings.mgmtTasksSyncing}
      bindings:
        mgmtTasksSyncing:
          destination: ${A6_MGMT_TASKS_RABBITMQ_OUTPUT_MGMTTASKSSYNCING_EXCHANGE:mgmtTasksSyncing} # existing exchange
        tasksClosed:
          destination: ${A6_MGMT_TASKS_RABBITMQ_OUTPUT_TASKSCLOSED_EXCHANGE:tasksClosed}
        tasksSyncing-in-0:
          destination: ${A6_MGMT_TASKS_RABBITMQ_TASKSSYNCING_INPUT_EXCHANGE:mgmtIntegrationSyncing} # existing exchange (or creates)?
          group: ${A6_MGMT_TASKS_RABBITMQ_TASKSSYNCING_INPUT_QUEUE:tasksSyncing} # queue = a6-exchange.a6-queue - whole project management update (batch)
          binder: a6Rabbit
      rabbit:
        bindings:
          tasksSyncing-in-0:
            consumer:
              republishToDlq: false
          mgmtTasksSyncing:
            producer:
              republishToDlq: false
          tasksClosed:
            producer:
              republishToDlq: false
      binders:
        a6Rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: ${A6_PROJECTS_MGMT_TASKS_RABBITMQ_HOST:localhost}
                port: ${A6_PROJECTS_MGMT_TASKS_RABBITMQ_PORT:5672}
                username: ${A6_PROJECTS_MGMT_TASKS_RABBITMQ_USER:guest}
                password: ${A6_PROJECTS_MGMT_TASKS_RABBITMQ_PASSWORD:guest}
                virtual-host: ${A6_PROJECTS_MGMT_TASKS_RABBITMQ_VHOST:/}
    function:
      definition: tasksSyncing # to be used if we use Spring Cloud Function support https://docs.spring.io/spring-cloud-stream/reference/spring-cloud-stream/producing-and-consuming-messages.html#spring_cloud_function
